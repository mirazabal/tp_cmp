!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DEFAULT_ELM	seq_ring_task.c	34;"	d	file:
NOTIFICATION_QUEUE_THREAD_POOL_H	notification_queue.h	2;"	d
SEQ_CIRCULAR_BUFFER_TASK_H	seq_ring_task.h	27;"	d
SPINLOCK_MIR_H	spinlock.h	2;"	d
TASK_MANAGER_WORKING_STEALING_H	task_manager.h	2;"	d
TASK_WORK_STEALING_THREAD_POOL_H	task.h	2;"	d
args	task.h	/^  void* args;$/;"	m	struct:__anon1
array	seq_ring_task.h	/^  task_t* array;$/;"	m	struct:seq_ring_buf_s
async_task_manager	task_manager.c	/^void async_task_manager(task_manager_t* man, task_t t)$/;"	f
cap	seq_ring_task.h	/^  size_t cap;$/;"	m	struct:seq_ring_buf_s
cv	notification_queue.h	/^  pthread_cond_t cv;$/;"	m	struct:__anon3
done	notification_queue.h	/^  int done;$/;"	m	struct:__anon3
done_not_q	notification_queue.c	/^void done_not_q(not_q_t* q)$/;"	f
enlarge_buffer	seq_ring_task.c	/^void enlarge_buffer(seq_ring_task_t* r)$/;"	f	file:
free_not_q	notification_queue.c	/^void free_not_q(not_q_t* q, void (*clean)(task_t*) )$/;"	f
free_seq_ring_task	seq_ring_task.c	/^void free_seq_ring_task(seq_ring_task_t* r, seq_free_func fp)$/;"	f
free_task_manager	task_manager.c	/^void free_task_manager(task_manager_t* man, void (*clean)(task_t*))$/;"	f
full	seq_ring_task.c	/^bool full(seq_ring_task_t* r)$/;"	f	file:
func	task.h	/^  void (*func)(void* args);$/;"	m	struct:__anon1
head	seq_ring_task.h	/^  uint32_t head;$/;"	m	struct:seq_ring_buf_s
idx	task_manager.c	/^  int idx;$/;"	m	struct:__anon2	file:
index	task_manager.h	/^  atomic_uint_fast64_t index;$/;"	m	struct:__anon6
init_not_q	notification_queue.c	/^void init_not_q(not_q_t* q)$/;"	f
init_seq_ring_task	seq_ring_task.c	/^void init_seq_ring_task(seq_ring_task_t* r)$/;"	f
init_task_manager	task_manager.c	/^void init_task_manager(task_manager_t* man, uint32_t num_threads)$/;"	f
len_thr	task_manager.h	/^  size_t len_thr;$/;"	m	struct:__anon6
lock	spinlock.h	/^  _Atomic bool lock;  $/;"	m	struct:__anon5
lock_spinlock	spinlock.c	/^void lock_spinlock(spinlock_t* s)$/;"	f
main	main.c	/^int main()$/;"	f
man	task_manager.c	/^  task_manager_t* man;$/;"	m	struct:__anon2	file:
mask	seq_ring_task.c	/^uint32_t mask(uint32_t cap, uint32_t val)$/;"	f	file:
mtx	notification_queue.h	/^  pthread_mutex_t mtx;$/;"	m	struct:__anon3
not_q_t	notification_queue.h	/^} not_q_t;$/;"	t	typeref:struct:__anon3
num_task	task_manager.h	/^  atomic_int_fast64_t num_task;$/;"	m	struct:__anon6
pause_or_yield	task_manager.c	7;"	d	file:
pause_or_yield	task_manager.c	9;"	d	file:
pop_not_q	notification_queue.c	/^bool pop_not_q(not_q_t* q, ret_try_t* out)$/;"	f
pop_seq_ring_task	seq_ring_task.c	/^task_t pop_seq_ring_task(seq_ring_task_t* r )$/;"	f
push_back_seq_ring_task	seq_ring_task.c	/^void push_back_seq_ring_task(seq_ring_task_t* r, task_t t)$/;"	f
push_not_q	notification_queue.c	/^void push_not_q(not_q_t* q, task_t t)$/;"	f
q_arr	task_manager.h	/^  not_q_t* q_arr;$/;"	m	struct:__anon6
r	notification_queue.h	/^  seq_ring_task_t r;$/;"	m	struct:__anon3
ret_try_t	notification_queue.h	/^} ret_try_t;$/;"	t	typeref:struct:__anon4
seq_free_func	seq_ring_task.h	/^typedef void (*seq_free_func)(task_t*); $/;"	t
seq_ring_buf_s	seq_ring_task.h	/^typedef struct seq_ring_buf_s$/;"	s
seq_ring_task_t	seq_ring_task.h	/^} seq_ring_task_t;$/;"	t	typeref:struct:seq_ring_buf_s
size_seq_ring_task	seq_ring_task.c	/^size_t size_seq_ring_task(seq_ring_task_t* r)$/;"	f
spinlock_t	spinlock.h	/^} spinlock_t;$/;"	t	typeref:struct:__anon5
success	notification_queue.h	/^  bool success;$/;"	m	struct:__anon4
t	notification_queue.h	/^  task_t t;$/;"	m	struct:__anon4
t_arr	task_manager.h	/^  pthread_t* t_arr;$/;"	m	struct:__anon6
tail	seq_ring_task.h	/^  uint32_t tail;$/;"	m	struct:seq_ring_buf_s
task_manager_t	task_manager.h	/^} task_manager_t;$/;"	t	typeref:struct:__anon6
task_t	task.h	/^} task_t;$/;"	t	typeref:struct:__anon1
task_thread_args_t	task_manager.c	/^} task_thread_args_t;$/;"	t	typeref:struct:__anon2	file:
try_lock_spinlock	spinlock.c	/^bool try_lock_spinlock(spinlock_t* s)$/;"	f
try_pop_not_q	notification_queue.c	/^ret_try_t try_pop_not_q(not_q_t* q)$/;"	f
try_push_not_q	notification_queue.c	/^bool try_push_not_q(not_q_t* q, task_t t)$/;"	f
unlock_spinlock	spinlock.c	/^void unlock_spinlock(spinlock_t* s)$/;"	f
wait_all_task_manager	task_manager.c	/^void wait_all_task_manager(task_manager_t* man)$/;"	f
wait_cv	task_manager.h	/^  pthread_cond_t wait_cv; $/;"	m	struct:__anon6
wait_mtx	task_manager.h	/^  pthread_mutex_t wait_mtx;$/;"	m	struct:__anon6
worker_thread	task_manager.c	/^void* worker_thread(void* arg)$/;"	f	file:
